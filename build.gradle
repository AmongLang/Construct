plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'among-lang'
version "${spec_version}.${patch_version}"

repositories {
    mavenCentral()
}

dependencies {
    api 'io.github.amonglang:among:0.6.0'

    compileOnly 'org.jetbrains:annotations:23.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testCompileOnly 'org.jetbrains:annotations:23.0.0'
}

test {
    useJUnitPlatform()
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

jar {
    manifest {
        attributes(
                "Name": "among/construct",
                "Specification-Title": "Construct",
                "Specification-Version": "${spec_version}",
                "Implementation-Title": "among.construct",
                "Implementation-Version": "${patch_version}"
        )
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.amonglang'
            artifactId = 'construct'
            version = "${spec_version}.${patch_version}"
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'construct'
                description = 'Object parser/factory abstraction layer for Among'
                url = 'https://github.com/AmongLang/Construct'

                licenses {
                    license {
                        name = 'MIT License'
                    }
                }
                developers {
                    developer {
                        name = 'Tictim'
                        email = 'ksw07149@gmail.com'
                        organization = 'AmongLang'
                        organizationUrl = 'https://github.com/AmongLang'
                    }
                }
                scm {
                    connection = 'scm:git:git:https://github.com/AmongLang/Construct.git'
                    developerConnection = 'scm:git:ssh://github.com:AmongLang/Construct.git'
                    url = 'https://github.com/AmongLang/Construct'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            // credentials(PasswordCredentials)
            credentials {
                username = System.getenv("mavenUsername")
                password = System.getenv("mavenPassword")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}